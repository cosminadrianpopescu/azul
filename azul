usage() {
    echo "Usage: "
    echo "    azul [options]"
    echo ""
    echo "Options: "
    echo "    -a <session-name> Attach to an existing session or create it if it does not exists"
    echo "    -t <session-name> Create a new session if it doesn't exists but don't attach to it"
    echo "    -l                List the existing sessions"
    echo "    -m                Start in marionette mode"
    echo "    -r                If AZUL_REMOTE_CONNECTION var is set, then the first tab will also be remote"
    echo "    -x                Skip loading the session if a session exists"
    echo "    -s <cmd>          Send the command to an existing session (only together with -a)"
    echo "    -c <config-path>  Load the config from the <config-path> location"
    echo "    -h --help         Displays this help and exists"
}

export AZUL_RUN_DIR="/tmp/azul-`id -u`"

is_session_live() {
    if [ ! -S $AZUL_RUN_DIR/$1 ]
    then
        return 0
    fi
    if [ "`ss -l | grep \" $AZUL_RUN_DIR/$1 \"`" == "" ]
    then
        return 0
    fi
    return 1
}

check_session() {
    is_session_live $1
    if [ $? == 0 ]
    then
        echo "The session $1 is not active."
        exit 1
    fi
}

list_sessions() {
    for f in `ls $AZUL_RUN_DIR`
    do
        is_session_live $f
        if [ $? == 1 ]
        then
            echo $f
        fi
    done
}

if [ ! -d $AZUL_RUN_DIR ]
then
    mkdir $AZUL_RUN_DIR
fi

export AZUL_CHILD_FILE=""

if [ "$AZUL_SESSION" != "" ]
then
    export AZUL_CHILD_FILE=$AZUL_RUN_DIR/$AZUL_SESSION-child
    echo "" > $AZUL_CHILD_FILE
    export AZUL_PARENT_SESSION=$AZUL_SESSION
fi

export AZUL_SESSION=""
export AZUL_LIST=""
AZUL_CMD=""

while getopts "a:t:lrxmhs:c:" o
do
    case "${o}" in
        a)
            AZUL_SESSION=$OPTARG
            ;;
        t)
            AZUL_SESSION=$OPTARG
            AZUL_SKIP_CONNECT=1
            ;;
        l)
            list_sessions
            exit 0
            ;;
        s)
            AZUL_CMD=$OPTARG
            ;;
        c)
            export AZUL_CONFIG_HOME=$OPTARG
            ;;
        m)
            export AZUL_IS_MARIONETTE="1"
            ;;
        r)
            export AZUL_START_REMOTE="1"
            ;;
        x)
            export AZUL_NO_AUTOSAVE="1"
            ;;
        h)
            usage
            exit 1
            ;;
    esac
done

if [[ "$AZUL_CMD" != "" && "$AZUL_SESSION" == "" ]]
then
    echo ""
    echo "You have to select a session to send a command"
    echo ""
    usage
    exit 1
fi

export AZUL_FAILED_FILE="$AZUL_RUN_DIR/$AZUL_SESSION-failed"

if [ -f "$AZUL_FAILED_FILE" ]
then
    rm $AZUL_FAILED_FILE
fi


if [[ "$AZUL_CMD" != "" && "$AZUL_SESSION" != "" ]]
then
    check_session $AZUL_SESSION
    $AZUL_NVIM_EXE --remote-send "$AZUL_CMD" --server $AZUL_RUN_DIR/$AZUL_SESSION
    exit 0
fi

export NVIM_XDG_CONFIG_HOME=$XDG_CONFIG_HOME
export XDG_CONFIG_HOME=$AZUL_PREFIX/share/azul
export NVIM_XDG_DATA_HOME=$XDG_DATA_HOME
export XDG_DATA_HOME=$AZUL_PREFIX/share/azul

CMD="$AZUL_NVIM_EXE -m -n -i $AZUL_PREFIX/share/azul/shada"
# if [[ "$AZUL_X" != "" && "$AZUL_Y" != "" ]]
# then
#     $AZUL_NVIM_EXE --remote-send "<C-s>n:lua require('azul').resize($AZUL_X, $AZUL_Y)<cr>i" --server $AZUL_RUN_DIR/$AZUL_SESSION
#     if [ $AZUL_RESIZE_CONNECT == 1 ]
#     then
#         $AZUL_NVIM_EXE --server $AZUL_RUN_DIR/$AZUL_SESSION --remote-ui
#     fi
if [ "$AZUL_SESSION" != "" ]
then
    is_session_live $AZUL_SESSION
    if [ $? == 0 ]
    then
        if [ -S $AZUL_RUN_DIR/$AZUL_SESSION ]
        then
            rm $AZUL_RUN_DIR/$AZUL_SESSION
        fi
        setsid $AZUL_NVIM_EXE --listen $AZUL_RUN_DIR/$AZUL_SESSION --headless >/dev/null 2>&1 0< /dev/null &!

    fi
    if [ "$AZUL_SKIP_CONNECT" == "1" ]
    then
        exit 0
    fi

    sleep 0.2
    check_file=$AZUL_RUN_DIR/$AZUL_SESSION-session
    echo $AZUL_SESSION > $check_file

    while [ -e $check_file ]
    do
        rm $check_file
        $AZUL_NVIM_EXE --server $AZUL_RUN_DIR/$AZUL_SESSION --remote-ui
        check_file=$AZUL_RUN_DIR/$AZUL_SESSION-session
        if [ -e $check_file ]
        then
            export AZUL_SESSION=`cat $check_file`
        fi
    done
    if [ -f "$AZUL_CHILD_FILE" ]
    then
        rm $AZUL_CHILD_FILE
    fi

    if [ -f "$AZUL_FAILED_FILE" ]
    then
        echo "There is an issue running azul. Check your shell setting in the config file. Azul will exit now"
    fi

else
    list_sessions
fi
